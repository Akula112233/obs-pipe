name: cicd-pipeline

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - 'main'
      - '**'
    types:
      - opened
      - reopened
      - edited
      - synchronize

env:
  IMAGE: shift-dev-worker
  REGISTRY_HOSTNAME: us-central1-docker.pkg.dev/worker-448319/sift-dev-registry
  DEPLOYMENT_BOT_ENDPOINT: http://34.121.54.7:4040/update-compose

jobs:
  Build_Artifact:
    if: (github.ref == 'refs/heads/merge_branch' && github.event_name == 'push') || (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE }}
          tags: |
            type=sha,enable=true,prefix=,suffix=,format=short
      - name: docker build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          target: runner
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
            NEXT_PUBLIC_SITE_URL=${{ vars.NEXT_PUBLIC_SITE_URL }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

  Push_Artifact_to_Registry:
    if: (github.ref == 'refs/heads/merge_branch' && github.event_name == 'push')  || (github.ref == 'refs/heads/main' && github.event_name == 'push')
#    if: (github.ref == 'refs/heads/merge_branch' && github.event_name == 'push') || (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'pull_request'
    needs: Build_Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE }}
          tags: |
            type=sha,enable=true,prefix=,suffix=,format=short
      - name: login to Dockerhub
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCR_PASSWORD }}
      - name: docker push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
            NEXT_PUBLIC_SITE_URL=${{ vars.NEXT_PUBLIC_SITE_URL }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

  Deploy:
    if: (( github.ref == 'refs/heads/main') && github.event_name == 'push')
#    if: (github.ref == 'refs/heads/merge_branch' && github.event_name == 'push') || (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'pull_request'
    needs: Push_Artifact_to_Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE }}
          tags: |
            type=sha,enable=true,prefix=,suffix=,format=short
      - name: Update Compose File
        run: |
          curl --location '${{ env.DEPLOYMENT_BOT_ENDPOINT }}' \
            --header 'Content-Type: application/json' \
            --data '{
              "image": "'"${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE }}"'",
              "tag": "'"${{ steps.meta.outputs.version }}"'"
            }'
